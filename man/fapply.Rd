% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fapply.R
\name{fapply}
\alias{fapply}
\title{Apply a function over a list or vector with optional parallelism and progress}
\usage{
fapply(.x, .f, ncores = 1, pb = FALSE, ...)
}
\arguments{
\item{.x}{A list or atomic vector of elements to iterate over. If not a list, it will be coerced.}

\item{.f}{A function to apply to each element of `.x`. Can be a function or a string naming a function.}

\item{ncores}{Integer. Number of cores to use for parallel processing. Default is `1` (sequential).}

\item{pb}{Logical. Whether to display a progress bar. Default is `FALSE`.}

\item{...}{Additional arguments passed to `.f`.}
}
\value{
A list of results obtained by applying `.f` to each element of `.x`. The result is always a list.
}
\description{
Applies a function `.f` to each element of `.x`, using optional parallel computation
and progress bar tracking. Designed as a parallel-compatible replacement for `lapply()`.
}
\examples{
slow_fn <- function(x) { Sys.sleep(0.01); x^2 }
x <- 1:100

# Sequential without progress
fapply(x, slow_fn)

# Sequential with progress
fapply(x, slow_fn, pb = TRUE)

# Parallel execution (Linux/macOS)
\dontrun{
fapply(x, slow_fn, ncores = 4)
fapply(x, slow_fn, ncores = 4, pb = TRUE)
}

}
