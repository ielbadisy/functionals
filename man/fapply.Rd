% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fapply.R
\name{fapply}
\alias{fapply}
\title{Apply a function over a list or vector with optional parallelism and progress}
\usage{
fapply(.x, .f, ncores = 1, pb = FALSE, cl = NULL, load_balancing = FALSE, ...)
}
\arguments{
\item{.x}{A list or atomic vector of elements to iterate over. If not a list, it will be coerced.}

\item{.f}{A function to apply to each element of `.x`. Can be a function or a string naming a function.}

\item{ncores}{Integer. Number of cores to use for parallel processing. Default is `1` (sequential).}

\item{pb}{Logical. Whether to display a progress bar. Default is `FALSE`.}

\item{cl}{Optional. A cluster object or "future" to use as backend. Default is NULL.}

\item{load_balancing}{Logical. Use load balancing (parLapplyLB). Default is FALSE.}

\item{...}{Additional arguments passed to `.f`.}
}
\value{
A list of results obtained by applying `.f` to each element of `.x`. The result is always a list.
}
\description{
Applies a function `.f` to each element of `.x`, using optional parallel computation
and progress bar tracking. Designed as a parallel-compatible replacement for `lapply()`.
}
